{-
  Id: urn:ubideco:stl:8mcrov7AXHM6ursbnhGhUL4fqTZy75qbnizFBXkVraDc#owner-sport-siren
  Name: RGB
  Version: 0.1.0
  Description: Consensus layer for RGB smart contracts
  Author: Dr Maxim Orlovsky <orlovsky@lnp-bp.org>
  Copyright (C) 2023-2024 LNP/BP Standards Association. All rights reserved.
  License: Apache-2.0
-}

@context
typelib RGB

import StrictTypes#5teCJyjMWaxbQK8vdga2soWh2U7waERS3ev8KHShJcgv#trumpet-scratch-pelican
  use SemId#cargo-plasma-catalog

import CommitVerify#7EpM1uymEteG4g4xmF5ntKYX1wXXpbQj5iLiDreH4jWa#protein-donald-cool
  use MerkleHash#culture-metro-modular
  use StrictHash#cheese-final-locate
  use MerkleProof#labor-hilton-magenta
  use ReservedBytes1#joker-lemon-mental
  use ReservedBytes2#pocket-habitat-soviet

import BPCore#9pKFs7Gw7gwerYGVcPCDqiCv5fa165qC6PvFxiotJjaG#rebel-herbert-tourist
  use TapretNodePartner#iceberg-poker-active
  use ExplicitSealTxid#antenna-darwin-emotion
  use TapretProof#forum-paint-tunnel
  use TapretPathProof#stage-element-update
  use Method#trilogy-tahiti-valid
  use TapretRightBranch#basket-prelude-bridge
  use BlindSealTxPtr#austria-icon-waiter
  use OpretProof#segment-ambient-totem
  use SecretSeal#santana-domingo-needle
  use AnchorMerkleProofOpretProof#break-water-octavia
  use AnchorMerkleProofTapretProof#noise-flag-special
  use BlindSealTxid#kimono-golf-price
  use TxPtr#strange-source-father

import AluVM#DVtm25LRKU4TjbyZmVxPhvCmctZ6vKkPKqfpU2QsDNUo#exodus-axiom-tommy
  use LibSite#mission-papa-mercy
  use LibId#rebel-factor-rodeo

import Std#DzTvt9gGhPUKD8Dkkjk9PDBhkJ4gtWxXWQjxnmUYLNrs#voyage-kimono-disco
  use Bool#laser-madam-maxwell

import Bitcoin#HX2UBak8vPsTokug1DGMDvTpzns3xUdwZ7QJdyt4qBA9#speed-atlanta-trilogy
  use Vout#chrome-robin-gallop
  use ScriptBytes#maestro-source-jackson
  use TapNodeHash#crash-culture-jamaica
  use LeafScript#brenda-round-micro
  use Txid#cowboy-diego-betty
  use InternalPk#meter-nerve-chicken
  use LeafVer#tunnel-lagoon-cowboy
  use XOnlyPk#evident-finance-promo


@mnemonic(banana-mouse-plaster)
data AltLayer1         : liquid#1


@mnemonic(salmon-taxi-ohio)
data AltLayer1Set      : {AltLayer1 ^ ..0xff}

@mnemonic(pinball-doctor-guide)
data AnchorSet         : tapret#1 BPCore.AnchorMerkleProofTapretProof#noise-flag-special
                       | opret BPCore.AnchorMerkleProofOpretProof#break-water-octavia
                       | dual (tapret BPCore.AnchorMerkleProofTapretProof#noise-flag-special, opret BPCore.AnchorMerkleProofOpretProof#break-water-octavia)

@mnemonic(verbal-slow-lemon)
data AnchoredBundle    : anchor XChainAnchorSet, bundle TransitionBundle

@mnemonic(buzzer-pattern-craft)
data AssetTag          : [Byte ^ 32]

@mnemonic(robin-blitz-andrea)
data AssignRevealedAttachBlindSealTxPtr : confidential (seal XChainSecretSeal
                       , state ConcealedAttach
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)
                       | confidentialState (seal XChainBlindSealTxPtr
                       , state ConcealedAttach
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)
                       | confidentialSeal (seal XChainSecretSeal
                       , state RevealedAttach
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)
                       | revealed (seal XChainBlindSealTxPtr
                       , state RevealedAttach
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)

@mnemonic(forever-jumbo-shine)
data AssignRevealedAttachBlindSealTxid : confidential (seal XChainSecretSeal
                       , state ConcealedAttach
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)
                       | confidentialState (seal XChainBlindSealTxid
                       , state ConcealedAttach
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)
                       | confidentialSeal (seal XChainSecretSeal
                       , state RevealedAttach
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)
                       | revealed (seal XChainBlindSealTxid
                       , state RevealedAttach
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)

@mnemonic(diploma-general-scorpio)
data AssignRevealedDataBlindSealTxPtr : confidential (seal XChainSecretSeal
                       , state ConcealedData
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)
                       | confidentialState (seal XChainBlindSealTxPtr
                       , state ConcealedData
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)
                       | confidentialSeal (seal XChainSecretSeal
                       , state RevealedData
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)
                       | revealed (seal XChainBlindSealTxPtr
                       , state RevealedData
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)

@mnemonic(equal-folio-ground)
data AssignRevealedDataBlindSealTxid : confidential (seal XChainSecretSeal
                       , state ConcealedData
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)
                       | confidentialState (seal XChainBlindSealTxid
                       , state ConcealedData
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)
                       | confidentialSeal (seal XChainSecretSeal
                       , state RevealedData
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)
                       | revealed (seal XChainBlindSealTxid
                       , state RevealedData
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)

@mnemonic(block-honey-solid)
data AssignRevealedValueBlindSealTxPtr : confidential (seal XChainSecretSeal
                       , state ConcealedFungible
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)
                       | confidentialState (seal XChainBlindSealTxPtr
                       , state ConcealedFungible
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)
                       | confidentialSeal (seal XChainSecretSeal
                       , state RevealedFungible
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)
                       | revealed (seal XChainBlindSealTxPtr
                       , state RevealedFungible
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)

@mnemonic(grille-horse-amber)
data AssignRevealedValueBlindSealTxid : confidential (seal XChainSecretSeal
                       , state ConcealedFungible
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)
                       | confidentialState (seal XChainBlindSealTxid
                       , state ConcealedFungible
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)
                       | confidentialSeal (seal XChainSecretSeal
                       , state RevealedFungible
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)
                       | revealed (seal XChainBlindSealTxid
                       , state RevealedFungible
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)

@mnemonic(partner-linda-stuart)
data AssignVoidStateBlindSealTxPtr : confidential (seal XChainSecretSeal
                       , state VoidState
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)
                       | confidentialState (seal XChainBlindSealTxPtr
                       , state VoidState
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)
                       | confidentialSeal (seal XChainSecretSeal
                       , state VoidState
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)
                       | revealed (seal XChainBlindSealTxPtr
                       , state VoidState
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)

@mnemonic(company-export-amber)
data AssignVoidStateBlindSealTxid : confidential (seal XChainSecretSeal
                       , state VoidState
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)
                       | confidentialState (seal XChainBlindSealTxid
                       , state VoidState
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)
                       | confidentialSeal (seal XChainSecretSeal
                       , state VoidState
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)
                       | revealed (seal XChainBlindSealTxid
                       , state VoidState
                       , lock CommitVerify.ReservedBytes2#pocket-habitat-soviet)

@mnemonic(hunter-hello-retro)
data AssignmentType    : U16

@mnemonic(explain-nato-passage)
data AssignmentWitness : absent ()
                       | present XChainTxid

@mnemonic(granite-history-canvas)
data AssignmentsBlindSealTxPtr : {AssignmentType -> ^ ..0xff TypedAssignsBlindSealTxPtr}

@mnemonic(center-nevada-promise)
data AssignmentsBlindSealTxid : {AssignmentType -> ^ ..0xff TypedAssignsBlindSealTxid}

@mnemonic(delta-member-agenda)
data AttachId          : [Byte ^ 32]

@mnemonic(magenta-forward-capitan)
data BaseCommitment    : flags CommitVerify.ReservedBytes1#joker-lemon-mental
                       , schemaId SchemaId
                       , timestamp I64
                       , testnet Std.Bool#laser-madam-maxwell
                       , altLayers1 CommitVerify.StrictHash#cheese-final-locate
                       , issuer CommitVerify.StrictHash#cheese-final-locate

@mnemonic(agenda-ivory-blast)
data BlindingFactor    : [Byte ^ 32]

@mnemonic(pizza-natural-cyclone)
data ConcealedAttach   : [Byte ^ 32]

@mnemonic(mirage-invite-newton)
data ConcealedData     : [Byte ^ 32]

@mnemonic(small-melody-empty)
data ConcealedFungible : commitment PedersenCommitment, rangeProof PedersenCommitment

@mnemonic(color-candid-polite)
data ContractHistory   : schemaId SchemaId
                       , contractId ContractId
                       , global {GlobalStateType -> ^ ..0xff {GlobalOrd -> ^ ..0xffffffff RevealedData}}
                       , rights {OutputAssignmentVoidState ^ ..0xffffffff}
                       , fungibles {OutputAssignmentRevealedValue ^ ..0xffffffff}
                       , data {OutputAssignmentRevealedData ^ ..0xffffffff}
                       , attach {OutputAssignmentRevealedAttach ^ ..0xffffffff}

@mnemonic(alarm-danube-vampire)
data ContractId        : [Byte ^ 32]

@mnemonic(forward-marina-needle)
data ContractState     : schema Schema, history ContractHistory

@mnemonic(diana-archive-liquid)
data DataState         : [Byte]

@mnemonic(mayor-archive-navy)
data Extension         : ffv Ffv
                       , contractId ContractId
                       , extensionType ExtensionType
                       , metadata Metadata
                       , globals GlobalState
                       , assignments AssignmentsBlindSealTxid
                       , redeemed Redeemed
                       , valencies Valencies
                       , validator CommitVerify.ReservedBytes1#joker-lemon-mental
                       , witness CommitVerify.ReservedBytes2#pocket-habitat-soviet

@mnemonic(joshua-company-orchid)
data ExtensionSchema   : metadata {MetaType ^ ..0xff}
                       , globals {GlobalStateType -> ^ ..0xff Occurrences}
                       , redeems {ValencyType ^ ..0xff}
                       , assignments {AssignmentType -> ^ ..0xff Occurrences}
                       , valencies {ValencyType ^ ..0xff}
                       , validator AluVM.LibSite#mission-papa-mercy?

@mnemonic(mission-salsa-parole)
data ExtensionType     : U16

@mnemonic(silence-motel-toronto)
data Ffv               : U16

@mnemonic(natasha-profit-winter)
data FungibleState     : bits64#8 U64

@mnemonic(profit-bazooka-present)
data FungibleType      : unsigned64Bit#8


@mnemonic(super-hexagon-sample)
data Genesis           : ffv Ffv
                       , schemaId SchemaId
                       , flags CommitVerify.ReservedBytes1#joker-lemon-mental
                       , timestamp I64
                       , testnet Std.Bool#laser-madam-maxwell
                       , altLayers1 AltLayer1Set
                       , metadata Metadata
                       , globals GlobalState
                       , assignments AssignmentsBlindSealTxid
                       , valencies Valencies
                       , issuer Issuer
                       , validator CommitVerify.ReservedBytes1#joker-lemon-mental

@mnemonic(formal-door-pixel)
data GenesisSchema     : metadata {MetaType ^ ..0xff}
                       , globals {GlobalStateType -> ^ ..0xff Occurrences}
                       , assignments {AssignmentType -> ^ ..0xff Occurrences}
                       , valencies {ValencyType ^ ..0xff}
                       , validator AluVM.LibSite#mission-papa-mercy?

@mnemonic(north-llama-empire)
data GlobalOrd         : witnessAnchor WitnessAnchor?, idx U16

@mnemonic(ranger-middle-roman)
data GlobalState       : {GlobalStateType -> ^ ..0xff GlobalValues}

@mnemonic(warning-magnet-blonde)
data GlobalStateSchema : reserved CommitVerify.ReservedBytes1#joker-lemon-mental
                       , semId StrictTypes.SemId#cargo-plasma-catalog
                       , maxItems U16

@mnemonic(seminar-major-tape)
data GlobalStateType   : U16

@mnemonic(bicycle-europe-shampoo)
data GlobalValues      : [RevealedData ^ 1..]

@mnemonic(press-egypt-helena)
data Input             : prevOut Opout, reserved CommitVerify.ReservedBytes2#pocket-habitat-soviet

@mnemonic(canada-chicken-analyze)
data InputMap          : {Bitcoin.Vout -> ^ 1.. OpId}

@mnemonic(liquid-meaning-convert)
data Inputs            : {Input}

@mnemonic(veteran-tango-content)
data Issuer            : [Byte]

@mnemonic(light-nelson-brain)
data MediaType         : any#255


@mnemonic(index-shadow-pattern)
data MetaType          : U16

@mnemonic(voodoo-budget-weekend)
data MetaValue         : [Byte]

@mnemonic(carmen-critic-metal)
data Metadata          : {MetaType -> ^ ..0xff MetaValue}

@mnemonic(unicorn-empire-mama)
data Occurrences       : min U16, max U16

@mnemonic(herbert-amadeus-college)
data OpCommitment      : ffv Ffv
                       , opType TypeCommitment
                       , metadata CommitVerify.StrictHash#cheese-final-locate
                       , globals CommitVerify.MerkleHash#culture-metro-modular
                       , inputs CommitVerify.MerkleHash#culture-metro-modular
                       , assignments CommitVerify.MerkleHash#culture-metro-modular
                       , redeemed CommitVerify.StrictHash#cheese-final-locate
                       , valencies CommitVerify.StrictHash#cheese-final-locate
                       , witness CommitVerify.MerkleHash#culture-metro-modular
                       , script CommitVerify.StrictHash#cheese-final-locate

@mnemonic(slow-samuel-ceramic)
data OpId              : [Byte ^ 32]

@mnemonic(shallow-match-tokyo)
data Opout             : op OpId
                       , ty AssignmentType
                       , no U16

@mnemonic(think-record-medusa)
data OutputAssignmentRevealedAttach : opout Opout
                       , seal XChainExplicitSealTxid
                       , state RevealedAttach
                       , witness AssignmentWitness

@mnemonic(nectar-nectar-capsule)
data OutputAssignmentRevealedData : opout Opout
                       , seal XChainExplicitSealTxid
                       , state RevealedData
                       , witness AssignmentWitness

@mnemonic(control-boris-motif)
data OutputAssignmentRevealedValue : opout Opout
                       , seal XChainExplicitSealTxid
                       , state RevealedFungible
                       , witness AssignmentWitness

@mnemonic(avatar-beatles-protein)
data OutputAssignmentVoidState : opout Opout
                       , seal XChainExplicitSealTxid
                       , state VoidState
                       , witness AssignmentWitness

@mnemonic(phone-lola-empty)
data OwnedStateSchema  : declarative ()
                       | fungible FungibleType
                       | structured StrictTypes.SemId#cargo-plasma-catalog
                       | attachment MediaType

@mnemonic(nepal-delta-earth)
data PedersenCommitment : [Byte ^ 33]

@mnemonic(scoop-press-scuba)
data Redeemed          : {ValencyType -> ^ ..0xff OpId}

@mnemonic(cigar-network-event)
data RevealedAttach    : id AttachId
                       , mediaType MediaType
                       , salt U64

@mnemonic(ivory-bogart-stock)
data RevealedData      : value DataState, salt U128

@mnemonic(canal-pagoda-ralph)
data RevealedFungible  : value FungibleState
                       , blinding BlindingFactor
                       , tag AssetTag

@mnemonic(scale-initial-anita)
data Schema            : ffv Ffv
                       , flags CommitVerify.ReservedBytes1#joker-lemon-mental
                       , metaTypes {MetaType -> ^ ..0xff StrictTypes.SemId#cargo-plasma-catalog}
                       , globalTypes {GlobalStateType -> ^ ..0xff GlobalStateSchema}
                       , ownedTypes {AssignmentType -> ^ ..0xff OwnedStateSchema}
                       , valencyTypes {ValencyType ^ ..0xff}
                       , genesis GenesisSchema
                       , extensions {ExtensionType -> ^ ..0xff ExtensionSchema}
                       , transitions {TransitionType -> ^ ..0xff TransitionSchema}

@mnemonic(garcia-smoke-ozone)
data SchemaId          : [Byte ^ 32]

@mnemonic(canary-first-under)
data Transition        : ffv Ffv
                       , contractId ContractId
                       , transitionType TransitionType
                       , metadata Metadata
                       , globals GlobalState
                       , inputs Inputs
                       , assignments AssignmentsBlindSealTxPtr
                       , valencies Valencies
                       , validator CommitVerify.ReservedBytes1#joker-lemon-mental
                       , witness CommitVerify.ReservedBytes2#pocket-habitat-soviet

@mnemonic(museum-result-logic)
data TransitionBundle  : inputMap InputMap, knownTransitions {OpId -> ^ 1.. Transition}

@mnemonic(window-basil-little)
data TransitionSchema  : metadata {MetaType ^ ..0xff}
                       , globals {GlobalStateType -> ^ ..0xff Occurrences}
                       , inputs {AssignmentType -> ^ ..0xff Occurrences}
                       , assignments {AssignmentType -> ^ ..0xff Occurrences}
                       , valencies {ValencyType ^ ..0xff}
                       , validator AluVM.LibSite#mission-papa-mercy?

@mnemonic(puma-joshua-evita)
data TransitionType    : U16

@mnemonic(medusa-amigo-reunion)
data TypeCommitment    : genesis BaseCommitment
                       | transition (ContractId, TransitionType)
                       | extension (ContractId, ExtensionType)

@mnemonic(orchid-season-bishop)
data TypedAssignsBlindSealTxPtr : declarative [AssignVoidStateBlindSealTxPtr]
                       | fungible [AssignRevealedValueBlindSealTxPtr]
                       | structured [AssignRevealedDataBlindSealTxPtr]
                       | attachment#255 [AssignRevealedAttachBlindSealTxPtr]

@mnemonic(rondo-roman-expand)
data TypedAssignsBlindSealTxid : declarative [AssignVoidStateBlindSealTxid]
                       | fungible [AssignRevealedValueBlindSealTxid]
                       | structured [AssignRevealedDataBlindSealTxid]
                       | attachment#255 [AssignRevealedAttachBlindSealTxid]

@mnemonic(andy-mango-brother)
data Valencies         : {ValencyType ^ ..0xff}

@mnemonic(palma-exit-pupil)
data ValencyType       : U16

@mnemonic(nectar-ceramic-driver)
data VoidState         : ()

@mnemonic(henry-prepare-company)
data WitnessAnchor     : witnessOrd WitnessOrd, witnessId XChainTxid

@mnemonic(jacket-fiction-sound)
data WitnessOrd        : onChain WitnessPos
                       | offChain ()

@mnemonic(robert-average-artist)
data WitnessPos        : height U32, timestamp I64

@mnemonic(floor-emotion-riviera)
data XChainAnchorSet   : bitcoin AnchorSet
                       | liquid AnchorSet

@mnemonic(prime-loyal-escort)
data XChainBlindSealTxPtr : bitcoin BPCore.BlindSealTxPtr#austria-icon-waiter
                       | liquid BPCore.BlindSealTxPtr#austria-icon-waiter

@mnemonic(biology-domain-domain)
data XChainBlindSealTxid : bitcoin BPCore.BlindSealTxid#kimono-golf-price
                       | liquid BPCore.BlindSealTxid#kimono-golf-price

@mnemonic(ozone-quick-hippie)
data XChainExplicitSealTxid : bitcoin BPCore.ExplicitSealTxid#antenna-darwin-emotion
                       | liquid BPCore.ExplicitSealTxid#antenna-darwin-emotion

@mnemonic(palace-random-taxi)
data XChainSecretSeal  : bitcoin BPCore.SecretSeal#santana-domingo-needle
                       | liquid BPCore.SecretSeal#santana-domingo-needle

@mnemonic(cubic-museum-lemon)
data XChainTxid        : bitcoin Bitcoin.Txid#cowboy-diego-betty
                       | liquid Bitcoin.Txid#cowboy-diego-betty


